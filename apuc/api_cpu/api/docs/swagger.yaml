basePath: /v1
definitions:
  models.CreatePost:
    properties:
      comment:
        type: string
      post_id:
        type: string
      title:
        type: string
      user_id:
        type: string
    type: object
  models.CreateUser:
    properties:
      city:
        type: string
      first_name:
        type: string
      username:
        type: string
    type: object
  models.Post:
    properties:
      comment:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      post_id:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.UpdatePost:
    properties:
      comment:
        type: string
      post_id:
        type: string
      title:
        type: string
      user_id:
        type: string
    type: object
  models.UpdateUser:
    properties:
      city:
        type: string
      id:
        type: string
      name:
        type: string
      username:
        type: string
    type: object
  models.User:
    properties:
      city:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  title: Task api
paths:
  /post/{id}:
    delete:
      consumes:
      - application/json
      description: Delete post
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Delete post
      tags:
      - Post
    put:
      consumes:
      - application/json
      description: Update post
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
      summary: Update post
      tags:
      - Post
  /posts:
    post:
      consumes:
      - application/json
      description: This API for creating a new post
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreatePost'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Post'
      summary: Create new task
      tags:
      - Post
  /task/{id}:
    get:
      consumes:
      - application/json
      description: Get post
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
      summary: Get task
      tags:
      - Post
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete User
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - BearerAuth: []
      summary: DeleteUser
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get User
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - BearerAuth: []
      summary: GetUser
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update User
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - BearerAuth: []
      summary: Update User
      tags:
      - User
  /users:
    post:
      consumes:
      - application/json
      description: This API for creating a new user
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Create new user
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
